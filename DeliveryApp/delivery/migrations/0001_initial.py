# Generated by Django 3.2.12 on 2022-05-21 11:32

import ckeditor.fields
import delivery.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('avatar', models.ImageField(upload_to='uploads/%Y/%m')),
                ('phone', models.CharField(max_length=10)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('start_address', models.TextField(default=delivery.models.Customer.address_full, max_length=255)),
                ('end_address', models.TextField(max_length=255)),
                ('distance', models.FloatField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='orders/%Y/%m')),
                ('weight', models.FloatField(blank=True)),
                ('size', models.CharField(blank=True, max_length=10)),
                ('status', models.CharField(default='Open', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.user')),
                ('address', models.TextField(max_length=255, null=True)),
                ('city', models.TextField(max_length=255, null=True)),
                ('district', models.TextField(max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('delivery.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, max_length=255)),
                ('rating', models.SmallIntegerField(blank=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.order')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bargain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=10, max_digits=20)),
                ('is_bargained', models.BooleanField(default=False)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shipper',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='delivery.user')),
                ('face_image', models.ImageField(upload_to='shipper/%Y/%m')),
                ('id_number', models.CharField(max_length=12, unique=True)),
                ('driver_licence_number', models.CharField(max_length=12)),
                ('driver_licence_class', models.CharField(max_length=4)),
                ('customers', models.ManyToManyField(through='delivery.Feedback', to='delivery.Customer')),
                ('orders', models.ManyToManyField(through='delivery.Bargain', to='delivery.Order')),
            ],
            options={
                'unique_together': {('driver_licence_number', 'driver_licence_class')},
            },
            bases=('delivery.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='delivery.customer'),
        ),
        migrations.AddField(
            model_name='order',
            name='shippers',
            field=models.ManyToManyField(through='delivery.Bargain', to='delivery.Shipper'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='shipper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.shipper'),
        ),
        migrations.AddField(
            model_name='customer',
            name='shippers',
            field=models.ManyToManyField(through='delivery.Feedback', to='delivery.Shipper'),
        ),
        migrations.AddField(
            model_name='bargain',
            name='shipper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='delivery.shipper'),
        ),
    ]
